// KpoLuc first project
// Lets define Pin 3 & 2 as serial communication pins by software

#include <SoftwareSerial.h>
SoftwareSerial BT1(3, 2); // RX | TX
String Dato1="";
char Dato="";
int long1=0;
String ordenes[]=
    {  //"AT+RST",
       "AT+CWMODE=3",
       "AT+CWJAP=\"WiFi SSID\",\"WiFiPassword\"",           //replace WiFi SSID by your SSID and WiFi Password by your password the '\' character must remain in the line do not remove !!!
       "AT+CIPMUX=1",
       "AT+CIPSERVER=1,80",
       "AT+CIFSR",
       "END"        // To recognize the end of commands AT for the ESP8266 initialization.
    };
int IRledPin =  13; 
int caso(char var="");


void setup()
{   pinMode(IRledPin, OUTPUT);  // set Pin 13 as Output

    // initializes the ESP 8266 

    BT1.begin(19200);
    Serial.begin(19200); 
    delay (1000);
    int index = 0;
    while(ordenes[index] != "END")
        {  BT1.println(ordenes[index++]);
           while ( true)
             {   String s = GetLineWIFI();
                 if ( s!= "") Serial.println(s);
                 if ( s.startsWith("no change"))   
                         break;
                 if ( s.startsWith("OK"))   
                         break;
                 if ( s.startsWith("ready"))   
                         break;
                // if (millis()-T >10000) break;  
             }
          Serial.println("....................");
      } 
}
void loop() 
  {  String B= "." ;
     if (BT1.available())
         { char c = BT1.read() ;
           Serial.print(c);
            Dato1 = Dato1 + c;
           if (c == '&')        // Character '&' used to indicate EOT command
           {
           long1 = Dato1.length();      //Get the length of string received via WiFi
           Dato = Dato1[long1-2];       //Get the Character received from the String Dato1 in the last position excluding Character '&'
           caso (Dato);                 //if character received it is valid executes the IR sequence correspondig to the character received.
//           Serial.println();
//           Serial.println(Dato);
           Dato1="";
           delay(200);
           }
        
     if (Serial.available())
         {  char c = Serial.read();
            BT1.print(c);
         }
      }

  }

String GetLineWIFI()
   {   String S = "" ;
       if (BT1.available())
          {    char c = BT1.read(); ;
                while ( c != '\n' )            //Until Character Nwe Line
                  {     S = S + c ;
                        delay(25) ;
                        c = BT1.read();
                   }
                 return( S ) ;
          }
   }

   int caso(char var)
{
 switch (var) {
    case '1':                 //command from Key #1 received
      delayMicroseconds(8492);
      pulseIR(9400);
      delayMicroseconds(4580);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(1680);
      pulseIR(640);
      delayMicroseconds(1700);
      pulseIR(640);
      delayMicroseconds(460);
      pulseIR(700);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(540);
      pulseIR(620);
      delayMicroseconds(540);
      pulseIR(640);
      delayMicroseconds(1680);
      pulseIR(640);
      delayMicroseconds(1700);
      pulseIR(640);
      delayMicroseconds(1680);
      pulseIR(640);
      delayMicroseconds(1700);
      pulseIR(640);
      delayMicroseconds(1700);
      pulseIR(620);
      delayMicroseconds(540);
      pulseIR(620);
      delayMicroseconds(1700);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(660);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(1680);
      pulseIR(600);
      delayMicroseconds(580);
      pulseIR(580);
      delayMicroseconds(580);
      pulseIR(580);
      delayMicroseconds(580);
      pulseIR(580);
      delayMicroseconds(580);
      pulseIR(600);
      delayMicroseconds(560);
      pulseIR(600);
      delayMicroseconds(580);
      pulseIR(580);
      delayMicroseconds(1740);
      pulseIR(580);
      delayMicroseconds(580);
      pulseIR(600);
      delayMicroseconds(1740);
      pulseIR(580);
      delayMicroseconds(1740);
      pulseIR(600);
      delayMicroseconds(1740);
      pulseIR(580);
      delayMicroseconds(1740);
      pulseIR(600);
      delayMicroseconds(1740);
      pulseIR(580);
      delayMicroseconds(1740);
      pulseIR(580);
      delayMicroseconds(40740);
      pulseIR(9380);
      delayMicroseconds(2300);
      pulseIR(580);

     break;
    case '2':                //command from Key #2 received
      delayMicroseconds(21432);
      pulseIR(9400);
      delayMicroseconds(4580);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(1680);
      pulseIR(640);
      delayMicroseconds(1700);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(540);
      pulseIR(640);
      delayMicroseconds(1680);
      pulseIR(640);
      delayMicroseconds(1700);
      pulseIR(620);
      delayMicroseconds(1700);
      pulseIR(640);
      delayMicroseconds(1700);
      pulseIR(620);
      delayMicroseconds(1700);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(1660);
      pulseIR(660);
      delayMicroseconds(540);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(1660);
      pulseIR(660);
      delayMicroseconds(1700);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(1700);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(500);
      pulseIR(660);
      delayMicroseconds(540);
      pulseIR(620);
      delayMicroseconds(540);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(1680);
      pulseIR(640);
      delayMicroseconds(1700);
      pulseIR(640);
      delayMicroseconds(520);
      pulseIR(640);
      delayMicroseconds(1700);
      pulseIR(620);
      delayMicroseconds(1680);
      pulseIR(660);
      delayMicroseconds(1680);
      pulseIR(640);
      delayMicroseconds(40680);
      pulseIR(9420);
      delayMicroseconds(2240);
      pulseIR(640);

     break;      
    case '3':               //command from Key #3 received
      delayMicroseconds(35648);
pulseIR(9340);
delayMicroseconds(4660);
pulseIR(580);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(560);
pulseIR(620);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1720);
pulseIR(620);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1700);
pulseIR(620);
     break;
    case '4':               //command from Key #4 received
      delayMicroseconds(24340);
pulseIR(9340);
delayMicroseconds(4640);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);

     break;
    case '5':               //command from Key #5 received
     delayMicroseconds(57084);
pulseIR(9380);
delayMicroseconds(4620);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1720);
pulseIR(620);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(580);

     break;
    case '6':               //command from Key #6 received
     delayMicroseconds(43484);
pulseIR(9340);
delayMicroseconds(4640);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);

    break;
    case '7':              //command from Key #7 received
     delayMicroseconds(4168);
pulseIR(9360);
delayMicroseconds(4620);
pulseIR(640);
delayMicroseconds(500);
pulseIR(660);
delayMicroseconds(1680);
pulseIR(640);
delayMicroseconds(1700);
pulseIR(640);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(540);
pulseIR(620);
delayMicroseconds(1680);
pulseIR(660);
delayMicroseconds(1700);
pulseIR(620);
delayMicroseconds(1700);
pulseIR(640);
delayMicroseconds(1680);
pulseIR(640);
delayMicroseconds(1700);
pulseIR(640);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(1700);
pulseIR(640);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(480);
pulseIR(680);
delayMicroseconds(540);
pulseIR(640);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(1680);
pulseIR(640);
delayMicroseconds(1700);
pulseIR(640);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(1660);
pulseIR(680);
delayMicroseconds(1680);
pulseIR(640);
delayMicroseconds(1700);
pulseIR(640);
delayMicroseconds(460);
pulseIR(700);
delayMicroseconds(520);
pulseIR(640);
delayMicroseconds(1700);
pulseIR(620);
delayMicroseconds(1700);
pulseIR(640);
delayMicroseconds(1680);
pulseIR(580);

    break;
    case '8':              //command from Key #8 received
     delayMicroseconds(58712);
pulseIR(9320);
delayMicroseconds(4640);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
    break;
    case '9':               //command from Key #9 received
     delayMicroseconds(41228);
pulseIR(9340);
delayMicroseconds(4640);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1680);
pulseIR(640);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(40740);
pulseIR(9360);
delayMicroseconds(2300);
pulseIR(580);
    break;
    case '0':                //command from Key #0 received
     delayMicroseconds(61564);
pulseIR(9340);
delayMicroseconds(4620);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(40680);
pulseIR(9360);
delayMicroseconds(2300);
pulseIR(580);
delayMicroseconds(33444);
    break;
    case '-':                //command from Key #Ch- received
     delayMicroseconds(48036);
pulseIR(9340);
delayMicroseconds(4640);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1720);
pulseIR(620);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
    break;

    case '+':                     //command from Key #CH+ received
delayMicroseconds(16044);
pulseIR(9340);
delayMicroseconds(4640);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(560);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(40720);
pulseIR(9360);
delayMicroseconds(2300);
pulseIR(580);

    break;

    case 'N':                           //command from Key #Vol+ received
delayMicroseconds(54700);
pulseIR(9300);
delayMicroseconds(4680);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(600);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(560);
delayMicroseconds(1780);
pulseIR(560);
delayMicroseconds(1780);
pulseIR(560);
delayMicroseconds(600);
pulseIR(560);
delayMicroseconds(1780);
pulseIR(540);
delayMicroseconds(620);
pulseIR(540);
delayMicroseconds(620);
pulseIR(560);
delayMicroseconds(600);
pulseIR(560);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1780);
pulseIR(560);
delayMicroseconds(1780);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(560);
pulseIR(580);
delayMicroseconds(39200);
pulseIR(9380);
delayMicroseconds(2320);
pulseIR(560);
delayMicroseconds(32004);
pulseIR(9360);
delayMicroseconds(2280);
pulseIR(600);
delayMicroseconds(52544);
pulseIR(2940);
delayMicroseconds(760);
pulseIR(460);
delayMicroseconds(900);
pulseIR(520);
delayMicroseconds(420);
pulseIR(500);
delayMicroseconds(440);
pulseIR(1320);
delayMicroseconds(1400);
pulseIR(500);
delayMicroseconds(420);
pulseIR(500);
delayMicroseconds(420);
pulseIR(500);
delayMicroseconds(440);
pulseIR(540);
delayMicroseconds(380);
pulseIR(500);
delayMicroseconds(440);
pulseIR(540);
delayMicroseconds(380);
pulseIR(540);
delayMicroseconds(380);
pulseIR(500);
delayMicroseconds(440);
pulseIR(500);
delayMicroseconds(420);
pulseIR(560);
delayMicroseconds(220);
pulseIR(700);
delayMicroseconds(380);
pulseIR(960);
delayMicroseconds(420);
pulseIR(560);
delayMicroseconds(840);
pulseIR(500);
delayMicroseconds(420);
pulseIR(560);

    break;

    case 'F':                     //command from Key #Vol- received
  delayMicroseconds(59160);
pulseIR(9340);
delayMicroseconds(4640);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1760);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(1680);
pulseIR(640);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1740);
pulseIR(580);
delayMicroseconds(580);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(580);
pulseIR(580);
delayMicroseconds(1740);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(560);
pulseIR(600);
delayMicroseconds(1720);
pulseIR(600);
delayMicroseconds(39220);
pulseIR(9380);
delayMicroseconds(2300);
pulseIR(580);
delayMicroseconds(32004);
pulseIR(9380);
delayMicroseconds(2300);
pulseIR(580);
delayMicroseconds(52504);
pulseIR(2780);
delayMicroseconds(900);
pulseIR(460);
delayMicroseconds(920);
pulseIR(500);
delayMicroseconds(440);
pulseIR(480);
delayMicroseconds(440);
pulseIR(460);
delayMicroseconds(880);
pulseIR(940);
delayMicroseconds(440);
pulseIR(500);
delayMicroseconds(420);
pulseIR(500);
delayMicroseconds(420);
pulseIR(500);
delayMicroseconds(440);
pulseIR(500);
delayMicroseconds(420);
pulseIR(500);
delayMicroseconds(440);
pulseIR(480);
delayMicroseconds(440);
pulseIR(500);
delayMicroseconds(420);
pulseIR(500);
delayMicroseconds(440);
pulseIR(500);
delayMicroseconds(420);
pulseIR(500);
delayMicroseconds(420);
pulseIR(500);
delayMicroseconds(440);
pulseIR(960);
delayMicroseconds(420);
pulseIR(480);
delayMicroseconds(920);
pulseIR(480);
delayMicroseconds(440);
pulseIR(500);
  
    break;

     
   }      
}

void pulseIR(long microsecs) {
// we'll count down from the number of microseconds we are told to wait
 
cli();  // this turns off any background interrupts
 
while (microsecs > 0) {
// 38 kHz is about 13 microseconds high and 13 microseconds low
digitalWrite(IRledPin, HIGH);  // this takes about 3 microseconds to happen
delayMicroseconds(10);         // hang out for 10 microseconds
digitalWrite(IRledPin, LOW);   // this also takes about 3 microseconds
delayMicroseconds(10);         // hang out for 10 microseconds
 
// so 26 microseconds altogether
microsecs -= 26;
}
 
sei();  // this turns them back on
}
 
